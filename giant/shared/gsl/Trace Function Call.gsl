{
  (+node)
  [
    run ("standard");
    if
      (has_attribute (node, "Operand"),
      { ()
        [
          set (+nodes, empty_node_set ());
          set (+edges, get_outgoing (node));
          add ('nodes, node);

          // get operand
          set (+operand, get_attribute (node, "Operand"));
          add ('nodes, operand);
          add ('edges, get_outgoing (operand));
          // get routine declaration
          set (+routine_decl, get_attribute (operand, "Routine_Declaration"));
          add ('nodes, routine_decl);
          add ('edges, get_outgoing (routine_decl));
          // get routine
          set (+routine, get_attribute (routine_decl, "HPG_Routine"));
          add ('nodes, routine);
          add ('edges, get_outgoing (routine));
 
          // make a real subgraph deleting some edges
          for_each
            (edges,
            { (+e)
            [
              if (is_in (nodes, get_target (e)), null,
                { ()
                  [
                    sub ('edges, e);
                  ]
                });
            ]});
 
          set ('selection.Trace, (nodes, edges));
        ]
      },
      null);
  ]
}
