// GSL-expression to generate a subgraph containing only nodes
//   connected with edges belonging to "*.Parent"
//
// First Author: Oliver Kopp
// based on iterate_find_system.gsl
//
// $Id: generate_subgraph__only_parent_edges.gsl,v 1.2 2003-10-06 23:05:56 koppor Exp $

[
  set (+target_edges, empty_edge_set ());
  set (+target_nodes, empty_node_set ());

  // build new activation environment. This makes
  // it possible to have 'nodes' destroyed before
  // the subgraph is created --> wastes less memory.
  { ()
    [
      set (+edges, all_edges ());
      loop
       ({ ()
          [
            set (+e, get_first ('edges));
            sub ('edges, e);
            if
             (type_in (get_type(e), "parent_edge_class_set"),
              { () 
	        [
		add ('target_edges, e);
		add ('target_nodes, get_source (e));
		add ('target_nodes, get_target (e));
		]
              },
              null);

	    // end loop, until edges is empty
            less (0, size_of ('edges));
          ]
        });
    ]
  } ();

  set ('subgraph.Tree_Parent_Edges, (target_nodes, target_edges));
]
